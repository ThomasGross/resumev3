// FLEXBOX CSS GRID
// https://pavellaptev.github.io/tiny-flexbox-grid-system/

// FUNCTIONS AND MiXINS
@function col-width($i, $columns, $gutter) {
  @return (100% / $columns * $i) - $gutter;
}

@mixin col-props($i, $columns, $gutter) {
  // box-sizing: border-box;
  width: col-width($i, $columns, $gutter);
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;
}

@mixin columns-loop($name, $columns, $gutter) {
  @for $i from 0 through $columns {
    &-#{$name}-#{$i} {
      @include col-props($i, $columns, $gutter);
    }
    &-#{$name}-shift-#{$i} {
      margin-left: col-width($i, $columns, $gutter);
    }
  }
}

@mixin grid-base($width) {
  box-sizing: border-box;
  display: flex;
  margin-left: auto;
  margin-right: auto;
  flex-wrap: wrap;
  max-width: $grid-desktop-breakpoint;
  width: $width;
}

// CLASSES
.grid {
  @include grid-base($desk-grid-width);
  @media screen and (max-width: $grid-tablet-breakpoint) {
    width: $tab-grid-width;
  }
  @media screen and (max-width: $grid-mobile-breakpoint) {
    width: $mob-grid-width;
  }
  &-0 {
    @include grid-base(100%);
  }
}

.col {
  @include columns-loop(desk, $grid-desktop-columns, $desk-gutter);
  @media screen and (max-width: $grid-tablet-breakpoint) {
    @include columns-loop(tab, $grid-tablet-columns, $tab-gutter);
  }
  @media screen and (max-width: $grid-mobile-breakpoint) {
    @include columns-loop(mob, $grid-mobile-columns, $mob-gutter);
  }

  &-tab-0 {
    @media screen and (max-width: $grid-tablet-breakpoint) {
      width: 0px;
      margin: 0 0 0 0;
      display: none;
    }
  }

  &-mob-0 {
    @media screen and (max-width: $grid-mobile-breakpoint) {
      width: 0px;
      margin: 0 0 0 0;
      display: none;
    }
  }
}
